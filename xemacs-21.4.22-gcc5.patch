--- xemacs21-21.4.22.orig/src/lisp.h
+++ xemacs21-21.4.22/src/lisp.h
@@ -193,6 +193,8 @@ void xfree (void *);
 # endif /* GNUC */
 #endif

+#ifndef _GCC_MAX_ALIGN_T
+#define _GCC_MAX_ALIGN_T
 /* No type has a greater alignment requirement than max_align_t.
    (except perhaps for types we don't use, like long double) */
 typedef union
@@ -202,6 +204,7 @@ typedef union
   struct { void (*f)(void); } f;
   struct { double d; } d;
 } max_align_t;
+#endif

 #ifndef ALIGNOF
 # if defined (__GNUC__) && (__GNUC__ >= 2)
--- xemacs21-21.4.22.orig/configure.in
+++ xemacs21-21.4.22/configure.in
@@ -1941,6 +1941,8 @@ if test "$cflags_specified" = "no"; then
     CFLAGS="-g -O3 -Wall -Wno-switch -Winline -Wmissing-prototypes"
     dnl Yuck, bad compares have been worth at least 3 crashes!
     CFLAGS="$CFLAGS -Wsign-compare"
+    dnl Use old gnu inline semantics because we're too lazy to fix the source
+    CFLAGS="$CFLAGS -fgnu89-inline"
     dnl XEmacs is known not to be strict-aliasing-safe.
     case "`gcc -v --help 2>&1`" in
       *-fstrict-aliasing* ) CFLAGS="$CFLAGS -fno-strict-aliasing" ;;
